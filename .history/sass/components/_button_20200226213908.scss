.btn {
    /* pseudo-classes */
    &, //this will translate into button
    &:link,                              /* link an anchor element; we straed at first step from  */
    &:visited {                          /* link and vistedt look the same here */
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;              /* if specufypadding, width, height of elemet thay sholud be display as a inline-block */
        border-radius: 10rem;
        transition: all .2s;               /* build a creative hover animation effect*/  /*first which properties we want animate, time duration*  */
        position: relative;
        font-size: $default-font-size;

        //change for the <button> element
        border: none;
        cursor: pointer;
    }

    &:hover {
        transform: translateY(-3px);                       /* element moves up */
        box-shadow: 0 1em 2rem rgba($color-black,.2);                       /* move x, y, blur, color; a very subtle shadow and here is 20% almost transparent*/

        
        &::after { /* when hover yhe btn we wnat some certain style for the after pseudo-elemenr, so this is an after pseudo-element only when we have the button on the hover state*/
            transform: scaleX(1.4) scaleY(1.6);    /* we want to be bigger after hover state; cen rowny zmkazdej str dlatego x i y skalujemy */ /* and we want to animate like before, so animate in initial state- btn:after above pseudoelement*/
            opacity: 0;         /* opacity 0 sets sth to invisible basicilly, so btn disappear */
        }

    }

    &:active,
    &:focus {                           /* click element */
        outline: none;
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2)
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;
        
        &::after {
            background-color: $color-primary;
        }
    }

    /* pseudo-elements to style caertain parts of elements*/  /* we want put this buuton behind the main btb */
    &::after {    /* we strat do taht looks like it zooms out to infinity when we hover and it comes back when we hover out; pseudoelement is like a child of btn */
        content: "";                      /* content is always necessary */
        display: inline-block;            /* display is always necessary as well, the same dispaly as btn  */
        height: 100%;                     /* teh dame property like btn we want to look the same as a btn, is like a child of btn*/
        width: 100%;
        border-radius: 10rem;
        position: absolute;               /* behind the btn we want put this actual btn we use position absol and the reference is the fisrt element with the relative position that it can find and it should be BTN (vis alnd link) and now it will be hidden behind the btn*/
        top: 0;
        left: 0;
        z-index: -1;                    /* defines the position of the elements if they are on top of another */
        transition: all .4s;

    }



    &--animated {   /* we ant to only this btn to animated from the bottom */
        animation: moveInBottom .5s ease-out .75s;     /* here is delay the last property */
        animation-fill-mode: backwards;     /* btn is visible before animation, we don't want that so we use this property and we set WSTECZ it means automacily the style up to 0% (moveinbottom) before the animation starts*/
    }
    }


.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px; 
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0  1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);

    }

    &:active {
        box-shadow: 0 .5rem 2rem rgba($color-black, .15);
        transform: translateY(0);
    }
}